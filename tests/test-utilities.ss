#!r7rs

;;; A test program for the (discrete utilities) library.

;;; John David Stone
;;; Department of Computer Science
;;; Grinnell College
;;; reseda@grinnell.edu

;;; created June 19, 2018
;;; last revised August 8, 2018

(import (scheme base)
        (discrete testing)
        (discrete utilities))

(suite assert ()
  (test true-condition
    (begin (assert (= (square 7) 49) true-condition)
           'reachable)
    1 (symbol?)
    (lambda (result)
      (eq? result 'reachable)))
  (test false-condition
    (guard (raised
            ((error-object? raised)
             (string=? (error-object-message raised)
                       "Assertion failed: (zero? 1) in false-condition\n"))
             (else (raise raised)))
      (assert (zero? 1) false-condition)
      'unreachable)
    1 (boolean?)
    (lambda (result)
      (eq? result #t))))

(suite cube ()
  (test zero
    (cube 0)
    1 (number?)
    zero?)
  (test small-positive
    (cube 7)
    1 (number?)
    (lambda (result)
      (= result 343)))
  (test negative
    (cube -413)
    1 (number?)
    (lambda (result)
      (= result -70444997)))
  (test large
    (cube 170263)
    1 (number?)
    (lambda (result)
      (= result 4935837394381447)))
  (test complex
    (cube 3-4i)
    1 (number?)
    (lambda (result)
      (= result -117-44i))))

(suite natural-number? ()
  (test zero
    (natural-number? 0)
    1 (boolean?)
    (lambda (result)
      (eq? result #t)))
  (test large-number
    (natural-number? 5205374877983015476224)
    1 (boolean?)
    (lambda (result)
      (eq? result #t)))
  (test negative-number
    (natural-number? -12015732693293)
    1 (not))
  (test complex-number
    (natural-number? 3+4i)
    1 (not))
  (test inexact-number
    (natural-number? 3.141592653589793)
    1 (not))
  (test non-number
    (natural-number? "42")
    1 (not)))

(suite factorial ()
  (test zero
    (factorial 0)
    1 (number?)
    (lambda (result)
      (= result 1)))
  (test small
    (factorial 5)
    1 (number?)
    (lambda (result)
      (= result 120)))
  (test large
    (factorial 1000)
    1 (number?)
    (lambda (result)
      (= result
  
;;; Copyright Â© 2018 John David Stone

;;; This program is free software.
;;; You may redistribute it and/or modify it
;;; under the terms of the GNU General Public License
;;; as published by the Free Software Foundation -- 
;;; either version 3 of the License,
;;; or (at your option) any later version.

;;; This program is distributed
;;; in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY --
;;; without even the implied warranty
;;; of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
;;; See the GNU General Public License for more details.

;;; You should have received a copy
;;; of the GNU General Public License
;;; along with this program.
;;; If not, it is available on the World Wide Web
;;; at https://www.gnu.org/licenses/gpl.html.
